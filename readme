1º instalar glogal o LESS:
- npm install -g less
2º iniciar o npm:
- npm init
3º instalar para dev:
- npm install --save-dev less
4º criar um gitignore e acrescenter o node_modules:
- dentro da pasta que está sendo trabalhando criar gitignore, edentro do arquivo escrever node_modules
5º dentro da pasta package.json, incluir o comando:
- "scripts":{
    "less": "lessc ./src/styles/main.less ./buld/styles/main.css",
    ...
}
6º execultar o programa:
- npm run less
7º instalando um plug-in (no LESS nnão temos a função watch):
-npm install -g less-watch-compiler
8º instalando o mesmo plugin para dev:
-npm install --save-dev less-watch-compiler
9º dentro da pasta package.json temos que alterar o código que escrevemos no item 5º:
-"scripts":{
   "less": "less-watch-compiler ./src/styles ./build/styles",
   ...
}
10º ainda na pasta package.json, podemos passar um terceiro arquivo, o principal:
-"scripts":{
   "less": "less-watch-compiler ./src/styles ./build/styles main.less",
   ...
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Aula 17.2

Comando atalho -> ul>li*4>a
-retorna:
     <ul>
                <li><a href=""></a></li>
                <li><a href=""></a></li>
                <li><a href=""></a></li>
                <li><a href=""></a></li>
            </ul>


escaping: subistitui o que foi escrito no código pelavariável definida.
- código: " ~"()";
**** ATENÇÃO ****
Sempre colocar o breakPoint do tablet antes do BreakPoint do Mobile - pq o tamanho do mobile é atendido tmb pelo breakpoint do tablet

Para resolver o problema da cascata podemos escrever o código:
@breakpointTablet: ~"(min-width: 768px) and (max-width: 1023px)";

Praticidades:

.profile-bio {
    .profile-bio-name {
        font-size: 16px;
    }
}

não precisamos repetir o profile-bio todo código, podemos usar o "&"


MIXINS: utilizado para evitar redundancia de códigos.

código: .funcao {
   aplicaçao: xxxx;
}

chamada: funcao()


-------------------------------------------------------------------------------------------------------

Nas imagens trazidas do site feather.com" as imagens são do tipo sgv, que conseguimos mudar o STROKE dela direto no código, alterandoisso alteramos a cor dela


Mapeamento: utilizando o mapeamento não precisamos utilizar as variáveis (que foi criada).

Código:
---esse dentro do arquivo mapas.less ----
#color() {
   nome1: cor1;
   nome2: cor2:
}

Chamada:

1º @import "mapas.less"

background-color: #color[nome1]

